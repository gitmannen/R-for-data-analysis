library(ggplot2)
getwd()
# setwd("..\\Users\\Lion\\Documents\\Lion Local\\RST and RMT qualification\\rst")
a<-read.csv("SS Qual LAP.csv")
a
str(a)
#Box Plot of Intermediate Precision (Operator to Operator) for Total (CD8+/-) Vb3+ % Viable
summary(a)
plot(x, y, type="l", lwd=1)
x <- seq(5, 15, length=1000)
y <- dnorm(x, mean=10, sd=3)
plot(x, y, type="l", lwd=1)
x <- seq(5, 15, length=2000)
y <- dnorm(x, mean=10, sd=3)
plot(x, y, type="l", lwd=1)
x
x <- seq(5, 15, length=5)
x
y <- dnorm(x, mean=10, sd=3)
plot(x, y, type="l", lwd=1)
x <- seq(0.001, 0.005, length=5)
y <- dnorm(x, mean=0.00256, sd=0.00123)
plot(x, y, type="l", lwd=1)
x
x <- seq(0.0005, 0.005, length=5)
y <- dnorm(x, mean=0.00256, sd=0.00123)
plot(x, y, type="l", lwd=1)
x
x <- seq(0.00001, 0.005, length=5)
y <- dnorm(x, mean=0.00256, sd=0.00123)
plot(x, y, type="l", lwd=1)
x <- seq(0.00001, 0.005, length=1000)
y <- dnorm(x, mean=0.00256, sd=0.00123)
plot(x, y, type="l", lwd=1)
x
x <- seq(0.00000, 0.005, length=1000)
y <- dnorm(x, mean=0.00256, sd=0.00123)
plot(x, y, type="l", lwd=1)
x
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggcyto")
#BiocManager::install("ggcyto")
library(ggcyto)
dataset <- read.FCS("EP Full Panel.fcs", transformation = FALSE, truncate_max_range = FALSE)
dataset
summary(dataset)
attr(dataset,'subset') <- "CD3+"
ggplot(dataset, aes(x=`FSC-A`,y=`FSC-H`))+
geom_hex(bins = 128)+
scale_fill_gradientn(colors = gray.colors(32))+
coord_cartesian(xlim=c(0,4000000), ylim = c(0,1800000))
fs <- gh_pop_get_data(dataset, "Vb3 FITC-H")
fs
ggplot(dataset, aes(x = `FL8-A`)) + geom_density(fill = "blue", alpha= 0.5)+
coord_cartesian(xlim=c(-10000,300000))
n
ggplot(dataset, aes(x=`FSC-A`,y=`FSC-H`))+
geom_hex(bins = 128)+
scale_fill_gradientn(colors = gray.colors(32))+
coord_cartesian(xlim=c(0,4000000), ylim = c(0,1800000))
dataset <- read.FCS("EP Full Panel.fcs", transformation = FALSE, truncate_max_range = FALSE)
library(ggplot2)
getwd()
# setwd("..\\Users\\Lion\\Documents\\Lion Local\\RST and RMT qualification\\rst")
a<-read.csv("CD8posVbetapos percent viable after normalization with mock for R.csv")
a
getwd()
# setwd("..\\Users\\Lion\\Documents\\Lion Local\\RST and RMT qualification\\rst")
a<-read.csv("CD8posVbetapos percent viable after normalization with mock for R.csv")
setwd("~/GitHub/R-for-data-analysis/SS Qual/Precision Accuarcy Linearity")
getwd()
# setwd("..\\Users\\Lion\\Documents\\Lion Local\\RST and RMT qualification\\rst")
a<-read.csv("CD8posVbetapos percent viable after normalization with mock for R.csv")
a
str(a)
# setting the factors
summary(a)
a$Sample
a$Sample = factor(a$Sample, levels=c('EP0 (Mock)','EP20','EP40','EP60','EP80','EP100'))
dataset<-a[c(1,6)]
dataset
str(dataset)
dataset$Sample
avgByEPConc <- aggregate(x=dataset$EP,by=list(dataset$Sample),FUN =mean)
daggsd<-aggregate(x=dataset$EP,by=list(dataset$Sample),FUN =sd) # use the aggregate function to pass a function across the data
daggmean<-aggregate(x=dataset$EP,by=list(dataset$Sample),FUN =mean)
avgByEPConc$Group.1 <- c(0,20,40,60,80,100)
avgByEPConc$Group.1 = factor(avgByEPConc$Group.1, levels=c('0','20','40','60','80','100'))
avgByEPConc$EP <- c(0,20,40,60,80,100)
str(avgByEPConc)
colnames(avgByEPConc)=c("EP_Percent","CD8posVb3pos_Percent_Viable","EP")
# plotting a regression line, not required as this plots a regression line of the means, not taking the individual values
linplot <- ggplot(data=avgByEPConc, aes(x=EP, y=CD8posVb3pos_Percent_Viable, label = CD8posVb3pos_Percent_Viable))
linplot+
geom_point(aes(x=EP, y=CD8posVb3pos_Percent_Viable))+
geom_smooth(aes(x=EP, y=CD8posVb3pos_Percent_Viable), method =lm, formula = y~x)
# getting the regression model. optional but the data can be counter-checked with the result from stat_poly_eq()
regressor = lm(formula = CD8posVb3pos_Percent_Viable ~ EP,
data = avgByEPConc)
regressor
# installing ggpubr
#install.packages("ggpubr")
library(ggpubr)
#install.packages("ggpmisc")
library(ggpmisc)
dataset2<- a[c(2,6)]
dataset2$EPConcFactor <- factor(dataset2$EP.Conc, levels=c(0,20,40,60,80,100))
str(dataset2)
bplot <- ggplot(data=dataset2, aes(x=EP.Conc, y=EP))
# box plot but using the ggpmisc to give the equation of the regression line
dev.cur()
bplot+
geom_smooth(aes(x=EP.Conc,y=EP),method=lm, se = TRUE, formula = y~x,)+
#geom_boxplot(aes(colour=EPConcFactor), outlier.alpha = 0)+ # optional, but the graph will be too confusing
stat_summary(aes(color=EPConcFactor),fun = mean,geom="crossbar", width = 5)+ # if you don't want to use box plot you can just use this to draw the mean line at each group
geom_point(aes(color=EPConcFactor),size=1, alpha=1)+
scale_x_continuous(name="EP Percent",n.breaks=11,labels=waiver())+
scale_y_continuous(name="CD8+Vb3+ % Viable",n.breaks=20,labels=waiver())+
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, coef.digits = 5, f.digits = 5, p.digits = 10, rr.digits = 4, size = 6)+ # just use this function from ggpmisc to get the equation and r2 value
guides(color = guide_legend(title = "EP Percent"))+
ggtitle("Linear Regression of CD8+Vb3+ % viable against Percent EP cells in various EP:Mock mixing ratios")+
theme(axis.title =
element_text(size = 18),
legend.title =
element_text(size = 12),
legend.text =
element_text(size = 12),
axis.text =
element_text(size = 12),
plot.title =
element_text(size = 16,
hjust = 0.5))#+
bplot+
geom_smooth(aes(x=EP.Conc,y=EP),method=lm, se = TRUE, formula = y~x,)+
#geom_boxplot(aes(colour=EPConcFactor), outlier.alpha = 0)+ # optional, but the graph will be too confusing
stat_summary(aes(color=EPConcFactor),fun = mean,geom="crossbar", width = 5)+ # if you don't want to use box plot you can just use this to draw the mean line at each group
geom_point(aes(color=EPConcFactor),size=1, alpha=1)+
scale_x_continuous(name="EP Percent",n.breaks=11,labels=waiver())+
scale_y_continuous(name="CD8+Vb3+ % Viable",n.breaks=20,labels=waiver())+
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, coef.digits = 5, f.digits = 5, p.digits = 10, rr.digits = 4, size = 6)+ # just use this function from ggpmisc to get the equation and r2 value
guides(color = guide_legend(title = "EP Percent"))+
ggtitle("Linear Regression of CD8+Vb3+ % viable against Percent EP cells /nin various EP:Mock mixing ratios")+
theme(axis.title =
element_text(size = 18),
legend.title =
element_text(size = 12),
legend.text =
element_text(size = 12),
axis.text =
element_text(size = 12),
plot.title =
element_text(size = 16,
hjust = 0.5))#+
bplot+
geom_smooth(aes(x=EP.Conc,y=EP),method=lm, se = TRUE, formula = y~x,)+
#geom_boxplot(aes(colour=EPConcFactor), outlier.alpha = 0)+ # optional, but the graph will be too confusing
stat_summary(aes(color=EPConcFactor),fun = mean,geom="crossbar", width = 5)+ # if you don't want to use box plot you can just use this to draw the mean line at each group
geom_point(aes(color=EPConcFactor),size=1, alpha=1)+
scale_x_continuous(name="EP Percent",n.breaks=11,labels=waiver())+
scale_y_continuous(name="CD8+Vb3+ % Viable",n.breaks=20,labels=waiver())+
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, coef.digits = 5, f.digits = 5, p.digits = 10, rr.digits = 4, size = 6)+ # just use this function from ggpmisc to get the equation and r2 value
guides(color = guide_legend(title = "EP Percent"))+
ggtitle("Linear Regression of CD8+Vb3+ % viable against Percent EP cells \n in various EP:Mock mixing ratios")+
theme(axis.title =
element_text(size = 18),
legend.title =
element_text(size = 12),
legend.text =
element_text(size = 12),
axis.text =
element_text(size = 12),
plot.title =
element_text(size = 16,
hjust = 0.5))#+
library(ggplot2)
getwd()
# setwd("..\\Users\\Lion\\Documents\\Lion Local\\RST and RMT qualification\\rst")
a<-read.csv("CD8posVbetapos percent viable after normalization with mock for R.csv")
a
str(a)
#Box Plot of Intermediate Precision (Operator to Operator) for Total (CD8+/-) Vb3+ % Viable
summary(a)
a$Sample
a$Sample = factor(a$Sample, levels=c('EP0 (Mock)','EP20','EP40','EP60','EP80','EP100'))
z<-ggplot(data=a, aes(x=Day, y=CD8.Vb3....Viable, label = CD8.Vb3....Viable))
z+
facet_wrap(.~Sample,nrow = 1, scales = "free_y", labeller = label_both)+
scale_y_continuous(n.breaks = 10)+
geom_boxplot(outlier.alpha = 0,
alpha = 0.5)+
geom_jitter(size = 5,
aes(colour = Operator),
alpha = 0.3
)+
ggtitle("Box Plot of Intermediate Precision (Operator to Operator) for Total CD8+ Vb3+ % Viable")+
ylab("Total CD8+ Vb3+ % Viable")+
theme(axis.title =
element_text(size = 18),
legend.title =
element_text(size = 18),
legend.text =
element_text(size = 16),
strip.text =
element_text(size = 16),
axis.text =
element_text(size = 16),
axis.ticks.x.bottom =
element_blank(),
axis.title.x =
element_blank(),
plot.title =
element_text(size = 20,
hjust = 0.5)
)+
#add in labels to the plot
geom_text(check_overlap = T, #avoid overlapping the labels
size = 3,
show.legend = F, #remove the 'a' in the legend
#hjust = 0,
#nudge_x = -0.6,
#vjust = 0,
#nudge_y = -0.01,
aes(colour = Operator) #changes the colour to match the Operator colour
)
library(ggplot2)
getwd()
# setwd("..\\Users\\Lion\\Documents\\Lion Local\\RST and RMT qualification\\rst")
a<-read.csv("CD8posVbetapos percent viable after normalization with mock for R.csv")
a
str(a)
# setting the factors
summary(a)
a$Sample
a$Sample = factor(a$Sample, levels=c('EP0 (Mock)','EP20','EP40','EP60','EP80','EP100'))
dataset<-a[c(1,6)]
dataset
str(dataset)
dataset$Sample
avgByEPConc <- aggregate(x=dataset$EP,by=list(dataset$Sample),FUN =mean)
daggsd<-aggregate(x=dataset$EP,by=list(dataset$Sample),FUN =sd) # use the aggregate function to pass a function across the data
daggmean<-aggregate(x=dataset$EP,by=list(dataset$Sample),FUN =mean)
avgByEPConc$Group.1 <- c(0,20,40,60,80,100)
avgByEPConc$Group.1 = factor(avgByEPConc$Group.1, levels=c('0','20','40','60','80','100'))
avgByEPConc$EP <- c(0,20,40,60,80,100)
str(avgByEPConc)
colnames(avgByEPConc)=c("EP_Percent","CD8posVb3pos_Percent_Viable","EP")
# plotting a regression line, not required as this plots a regression line of the means, not taking the individual values
linplot <- ggplot(data=avgByEPConc, aes(x=EP, y=CD8posVb3pos_Percent_Viable, label = CD8posVb3pos_Percent_Viable))
linplot+
geom_point(aes(x=EP, y=CD8posVb3pos_Percent_Viable))+
geom_smooth(aes(x=EP, y=CD8posVb3pos_Percent_Viable), method =lm, formula = y~x)
# getting the regression model. optional but the data can be counter-checked with the result from stat_poly_eq()
regressor = lm(formula = CD8posVb3pos_Percent_Viable ~ EP,
data = avgByEPConc)
regressor
# installing ggpubr
#install.packages("ggpubr")
library(ggpubr)
#install.packages("ggpmisc")
library(ggpmisc)
dataset2<- a[c(2,6)]
dataset2$EPConcFactor <- factor(dataset2$EP.Conc, levels=c(0,20,40,60,80,100))
str(dataset2)
bplot <- ggplot(data=dataset2, aes(x=EP.Conc, y=EP))
# box plot but using the ggpmisc to give the equation of the regression line
#dev.cur() #this code is used to find out which R graphics device is being used
bplot+
geom_smooth(aes(x=EP.Conc,y=EP),method=lm, se = TRUE, formula = y~x,)+
#geom_boxplot(aes(colour=EPConcFactor), outlier.alpha = 0)+ # optional, but the graph will be too confusing
stat_summary(aes(color=EPConcFactor),fun = mean,geom="crossbar", width = 5)+ # if you don't want to use box plot you can just use this to draw the mean line at each group
geom_point(aes(color=EPConcFactor),size=1, alpha=1)+
scale_x_continuous(name="EP Percent",n.breaks=11,labels=waiver())+
scale_y_continuous(name="CD8+Vb3+ % Viable",n.breaks=20,labels=waiver())+
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, coef.digits = 5, f.digits = 5, p.digits = 10, rr.digits = 4, size = 6)+ # just use this function from ggpmisc to get the equation and r2 value
guides(color = guide_legend(title = "EP Percent"))+
ggtitle("Linear Regression of CD8+Vb3+ % viable against Percent EP cells \n in various EP:Mock mixing ratios")+
theme(axis.title =
element_text(size = 18),
legend.title =
element_text(size = 12),
legend.text =
element_text(size = 12),
axis.text =
element_text(size = 12),
plot.title =
element_text(size = 16,
hjust = 0.5))#+
